include:
  - airflow/docker-compose.yaml

volumes:
  elasticsearch_data:
  geonetwork_data:
  postgresql_data:

services:
  postgis:
    image: postgis/postgis:17-3.5
    environment:
      POSTGRES_USER: postgis
      POSTGRES_PASSWORD: postgis
      POSTGRES_DB: postgis
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgis" ]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    ports:
      - "5433:5433"
    command: -p 5433
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  ingestor:
    build: ./ingestor
    depends_on:
      - postgis
    volumes:
      - ./ingestor/app:/code/app
    environment:
      - AIRFLOW_URL=http://airflow-webserver:8080
    ports:
      - "8081:80"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.15
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -s -f http://localhost:9200/_cat/health >/dev/null || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'

  geonetwork:
    image: geonetwork:4.4.0
    environment:
      #      ES_HOST: elasticsearch
      #      ES_PROTOCOL: http
      #      ES_PORT: 9200
      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: postgis
      GEONETWORK_DB_PORT: 5433
      GEONETWORK_DB_NAME: postgis
      GEONETWORK_DB_USERNAME: postgis
      GEONETWORK_DB_PASSWORD: postgis
      DATA_DIR: /catalogue-data
      VIRTUAL_HOST: localhost

      JAVA_OPTS: >
        -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
        -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5005
        -Dgeonetwork.resources.dir=/catalogue-data/data/resources
        -Dgeonetwork.data.dir=/catalogue-data/data
        -Dgeonetwork.codeList.dir=/catalogue-data/config/codelist
        -Dgeonetwork.schema.dir=/catalogue-data/config/schema_plugins
        -Dgeonetwork.config.dir=/catalogue-data/config
        -Dgeonetwork.indexConfig.dir=/catalogue-data/config/index
        -Des.host=elasticsearch
        -Des.protocol=http
        -Des.port=9200
        -Des.url=http://elasticsearch:9200
        -Des.username=
        -Des.password=
    depends_on:
      postgis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -s -f http://localhost:8080/geonetwork/srv/eng/catalog.search >/dev/null || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - geonetwork_data:/catalogue-data/
    ports:
      - '8082:8080'
      - '5005:5005'
